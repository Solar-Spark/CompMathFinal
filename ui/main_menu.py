from PyQt6 import QtCore, QtGui, QtWidgets


class Ui_TaskSelect(object):
    def setupUi(self, TaskSelect):
        TaskSelect.setObjectName("TaskSelect")
        TaskSelect.resize(340, 302)
        self.centralwidget = QtWidgets.QWidget(parent=TaskSelect)
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.centralwidget)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.verticalLayout = QtWidgets.QVBoxLayout()
        self.verticalLayout.setSizeConstraint(QtWidgets.QLayout.SizeConstraint.SetDefaultConstraint)
        self.verticalLayout.setSpacing(6)
        self.verticalLayout.setObjectName("verticalLayout")
        self.graph_button = QtWidgets.QPushButton(parent=self.centralwidget)
        self.graph_button.setMinimumSize(QtCore.QSize(320, 30))
        self.graph_button.setObjectName("graph_button")
        self.verticalLayout.addWidget(self.graph_button)
        self.root_button = QtWidgets.QPushButton(parent=self.centralwidget)
        self.root_button.setMinimumSize(QtCore.QSize(320, 30))
        self.root_button.setObjectName("root_button")
        self.verticalLayout.addWidget(self.root_button)
        self.jacobi_button = QtWidgets.QPushButton(parent=self.centralwidget)
        self.jacobi_button.setMinimumSize(QtCore.QSize(320, 30))
        self.jacobi_button.setObjectName("jacobi_button")
        self.verticalLayout.addWidget(self.jacobi_button)
        self.iterative_button = QtWidgets.QPushButton(parent=self.centralwidget)
        self.iterative_button.setMinimumSize(QtCore.QSize(320, 30))
        self.iterative_button.setObjectName("iterative_button")
        self.verticalLayout.addWidget(self.iterative_button)
        self.linear_curve_button = QtWidgets.QPushButton(parent=self.centralwidget)
        self.linear_curve_button.setMinimumSize(QtCore.QSize(320, 30))
        self.linear_curve_button.setObjectName("linear_curve_button")
        self.verticalLayout.addWidget(self.linear_curve_button)
        self.forward_interpolation_button = QtWidgets.QPushButton(parent=self.centralwidget)
        self.forward_interpolation_button.setMinimumSize(QtCore.QSize(320, 30))
        self.forward_interpolation_button.setObjectName("forward_interpolation_button")
        self.verticalLayout.addWidget(self.forward_interpolation_button)
        self.derivative_forward_button = QtWidgets.QPushButton(parent=self.centralwidget)
        self.derivative_forward_button.setMinimumSize(QtCore.QSize(320, 30))
        self.derivative_forward_button.setObjectName("derivative_forward_button")
        self.verticalLayout.addWidget(self.derivative_forward_button)
        self.trapezoidal_button = QtWidgets.QPushButton(parent=self.centralwidget)
        self.trapezoidal_button.setMinimumSize(QtCore.QSize(320, 30))
        self.trapezoidal_button.setObjectName("trapezoidal_button")
        self.verticalLayout.addWidget(self.trapezoidal_button)
        self.verticalLayout_2.addLayout(self.verticalLayout)
        TaskSelect.setCentralWidget(self.centralwidget)

        self.retranslateUi(TaskSelect)
        QtCore.QMetaObject.connectSlotsByName(TaskSelect)

    def retranslateUi(self, TaskSelect):
        _translate = QtCore.QCoreApplication.translate
        TaskSelect.setWindowTitle(_translate("TaskSelect", "Choose task"))
        self.graph_button.setText(_translate("TaskSelect", "Graphical Method and Absolute Error"))
        self.root_button.setText(_translate("TaskSelect", "Comparison of Root-Finding Methods"))
        self.jacobi_button.setText(_translate("TaskSelect", "Jacobi Method"))
        self.iterative_button.setText(_translate("TaskSelect", " Iterative Method for Matrix Inversion"))
        self.linear_curve_button.setText(_translate("TaskSelect", "Linear Curve Fitting"))
        self.forward_interpolation_button.setText(_translate("TaskSelect", "Newton’s Forward Interpolation Formula"))
        self.derivative_forward_button.setText(_translate("TaskSelect", "First Derivative Using Newton’s Forward Difference Formula"))
        self.trapezoidal_button.setText(_translate("TaskSelect", "Trapezoidal Rule"))
